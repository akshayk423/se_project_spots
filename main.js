!function(){"use strict";var e="";const t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit",inactiveButtonClass:"modal__submit_type_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},r=(e,t,r)=>{const n=e.querySelector(`#${t.id}-error`);t.classList.remove(r.inputErrorClass),n.textContent="",n.classList.add(r.errorClass)},n=(e,t,r)=>{(e=>e.some(e=>!e.validity.valid))(e)?s(t,r):o(t,r)},s=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.disabled=!0},o=(e,t)=>{e.classList.remove(t.inactiveButtonClass),e.disabled=!1};var a=e+"d3610e9c6dce3cb370d8.svg",c=e+"1ecf96fab54a91c898b4.svg",i=e+"40608da7369d39bc1077.svg";const d=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse)}editUserInfo({name:e,about:t}){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}editUserAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e})}).then(this._checkResponse)}addCard({name:e,link:t}){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{headers:this._headers,method:"DELETE",body:JSON.stringify({cardId:e})}).then(this._checkResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{headers:this._headers,method:"PUT",body:JSON.stringify({cardId:e})}).then(this._checkResponse)}dislikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{headers:this._headers,method:"DELETE",body:JSON.stringify({cardId:e})}).then(this._checkResponse)}spotsStartUp(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"6e58b2db-8c6b-4765-b44f-89c77c553815","Content-Type":"application/json"}}),l=document.querySelector(".profile__name"),u=document.querySelector(".profile__description"),m=document.querySelector(".profile__avatar");document.getElementById("spots-logo").src=a,document.getElementById("edit-icon").src=c,document.getElementById("plus-icon").src=i;const h=document.querySelector(".profile__edit-profile-btn"),_=document.querySelector("#edit-profile-modal"),b=document.forms.profile,f=document.querySelector(".profile__new-post-btn"),p=document.querySelector("#new-post-modal"),y=document.forms.newPost,v=document.querySelector("#delete-card-modal"),S=document.querySelector(".modal__delete-btn"),k=document.querySelector(".modal__cancel-btn"),q=document.querySelector(".profile__avatar-edit-btn"),C=document.querySelector("#edit-avatar-modal"),g=document.forms.avatar,E=document.querySelector("#avatar-link-input"),L=document.querySelector(".profile__column"),U=L.querySelector(".profile__name"),x=L.querySelector(".profile__description"),$=_.querySelector("#profile-name-input"),A=_.querySelector("#describe-input"),I=p.querySelector("#image-link-input"),B=p.querySelector("#caption-input"),R=document.querySelector(".cards__list"),D=document.querySelector("#modal-image"),w=D.querySelector(".modal__image"),N=D.querySelector(".modal__caption"),O=document.querySelector("#card-template").content;let P,T;function J(e){"Escape"===e.key&&H(document.querySelector(".modal_is-opened"))}function j(e){e.classList.add("modal_is-opened"),document.addEventListener("keydown",J)}function H(e){e.classList.remove("modal_is-opened"),document.removeEventListener("keydown",J)}function z(e,t="prepend"){const r=function(e){const t=O.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__text"),n=t.querySelector(".card__image");n.setAttribute("src",e.link),n.setAttribute("alt",e.name),r.textContent=e.name;const s=t.querySelector(".card__like-btn");return e.isLiked&&s.classList.toggle("card__like-btn_liked"),s.addEventListener("click",t=>{var r,n;r=t.target,n=e._id,e.isLiked?d.dislikeCard(n).then(()=>r.classList.toggle("card__like-btn_liked")).catch(e=>console.error(e)):d.likeCard(n).then(()=>r.classList.toggle("card__like-btn_liked")).catch(e=>console.error(e))}),t.querySelector(".card__delete-btn").addEventListener("click",r=>{!function(e,t){P=e,T=t,j(v)}(t,e._id)}),n.addEventListener("click",()=>{w.setAttribute("src",e.link),w.setAttribute("alt",e.name),N.textContent=e.name,j(D)}),t}(e);R[t](r)}function M(e,t){console.log(error),t.submitter.disabled=!1}function F(e){e.submitter.textContent="Save",s(e.submitter,t)}var G;document.querySelectorAll(".modal").forEach(e=>{e.addEventListener("mousedown",t=>{(t.target===e||t.target.classList.contains("modal__close-btn"))&&H(e)})}),q.addEventListener("click",()=>{j(C)}),h.addEventListener("click",function(){j(_),$.value=U.textContent,A.value=x.textContent,((e,t,s)=>{t.forEach(t=>{r(e,t,s)});const o=e.querySelector(s.submitButtonSelector);n(t,o,s)})(b,[$,A],t)}),f.addEventListener("click",function(){j(p)}),b.addEventListener("submit",e=>{e.preventDefault();const t=$.value,r=A.value;e.submitter.textContent="Saving...",e.submitter.disabled=!0,d.editUserInfo({name:t,about:r}).then(e=>{l.textContent=e.name,u.textContent=e.about,H(_)}).catch(t=>M(0,e)).finally(()=>F(e))}),k.addEventListener("click",()=>{H(v)}),y.addEventListener("submit",e=>{e.preventDefault();const t=B.value,r=I.value;e.submitter.textContent="Saving...",e.submitter.disabled=!0,d.addCard({name:t,link:r}).then(e=>{z(e),y.reset(),H(p)}).catch(t=>M(0,e)).finally(()=>F(e))}),S.addEventListener("click",function(){S.textContent="Deleting...",d.deleteCard(T).then(()=>{P.remove(),H(v)}).catch(e=>console.error(e)).finally(()=>{S.textContent="Delete"})}),g.addEventListener("submit",e=>{e.preventDefault();const t=E.value;e.submitter.textContent="Saving...",e.submitter.disabled=!0,d.editUserAvatar(t).then(e=>{m.src=e.avatar,H(C),g.reset()}).catch(t=>M(0,e)).finally(()=>F(e))}),G=t,Array.from(document.querySelectorAll(G.formSelector)).forEach(e=>{e.addEventListener("submit",function(e){e.preventDefault()}),((e,t)=>{const s=Array.from(e.querySelectorAll(t.inputSelector)),o=e.querySelector(t.submitButtonSelector);n(s,o,t),s.forEach(a=>{a.addEventListener("input",function(){((e,t,n)=>{t.validity.valid?r(e,t,n):((e,t,r,n)=>{const s=e.querySelector(`#${t.id}-error`);t.classList.add(n.inputErrorClass),s.textContent=r,s.classList.add(n.errorClass)})(e,t,t.validationMessage,n)})(e,a,t),n(s,o,t)})})})(e,G)}),d.spotsStartUp().then(e=>{const[t,r]=e;l.textContent=r.name,u.textContent=r.about,m.src=r.avatar,t.forEach(e=>z(e,"append"))}).catch(e=>{console.error(e)})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,